#!/bin/sh /etc/rc.common

USE_PROCD=1
START=90

APP_PATH=/usr/sbin
APP=traefik

############################
# Utils
############################

UHTTPD_LISTEN_HTTP=
UHTTPD_LISTEN_HTTPS=

get_uhttpd_listen() {
	config_load uhttpd
	config_get UHTTPD_LISTEN_HTTP "main" listen_http
	config_get UHTTPD_LISTEN_HTTPS "main" listen_https
}

config_list_replace() {
	local key=$1
	local values=$*

	uci -q delete $key
	for value in $values; do
		uci add_list $key=$value
	done
}

restore_uhttpd_listen() {
	local http_port https_port

	config_load $APP
	config_get listen_http "uhttpd_restore" listen_http
	config_get listen_https "uhttpd_restore" listen_https

	# Replace uhttpd listen_http/listen_https
	config_list_replace "uhttpd.main.listen_http" "${listen_http}"
	config_list_replace "uhttpd.main.listen_https" "${listen_https}"
	uci commit uhttpd
}

update_uhttpd_listen() {
	local enable_replace
	local http_port https_port

	# Read uhttp config
	get_uhttpd_listen

	# Reload traefik
	config_load $APP
	config_get_bool enable_replace "uhttpd" enable_replace 0
	if [ "${enable_replace}" -eq 1 ]; then
		# Replace uhttpd listen
		echo "Replacing uhttp default listen_http and listen_https"

		config_get listen_http "uhttpd" listen_http
		config_get listen_https "uhttpd" listen_https

		# Replace uhttpd listen_http/listen_https
		config_list_replace "uhttpd.main.listen_http" "${listen_http}"
		config_list_replace "uhttpd.main.listen_https" "${listen_https}"
		uci commit uhttpd

		# Backup previous uhttp listen_http/listen_https
		config_list_replace "traefik.uhttpd_restore.listen_http" "$UHTTPD_LISTEN_HTTP}"
		config_list_replace "traefik.uhttpd_restore.listen_https" "${UHTTPD_LISTEN_HTTPS}"
		uci commit traefik
	else
		# Restore uhttpd listen
		# TODO
	fi
}

############################
# Services
############################

start_service() {
	local file_provider
	local std_err std_out

	# update uhttp listen setting (replace or restore)
	update_uhttpd_listen

	# Launch service
	config_load $APP
	config_get_bool std_out "main" log_stdout 1
	config_get_bool std_err "main" log_stderr 1
	config_get file_provider "provider" file /etc/traefik/config.yml

	procd_open_instance
	procd_set_param command /usr/sbin/$APP

	if [ -f "$file_provider" ]; then
		procd_append_param command --providers.file.directory="$config_file"
		procd_append_param command --providers.file.watch=true
	fi

	procd_set_param respawn
	procd_set_param stdout "$std_out"
	procd_set_param stderr "$std_err"

	procd_close_instance
}

stop_service() {
	service_stop /usr/bin/$APP
}
