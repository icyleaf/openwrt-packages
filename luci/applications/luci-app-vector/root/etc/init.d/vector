#!/bin/sh /etc/rc.common

START=99
STOP=15
USE_PROCD=1
APP=vector

start_service() {
  local bin_path
  local config_file
  local watch_config
  local std_err std_out
  local verbose

  config_load $APP
  config_get_bool std_out "main" log_stdout 1
  config_get_bool std_err "main" log_stderr 1
  config_get_bool watch_config "main" watch_config 1
  config_get_bool verbose "main" verbose 0
  config_get config_file "main" config_file /etc/vector/config.yml
  config_get bin_path "main" bin_path /usr/bin/$APP

  # Check if binary and config file exists
  [ -x "$bin_path" ] || return
  [ -f "$config_file" ] || return

  # Default data storage path
  mkdir -p tmp/vector

  # Validate
  $bin_path validate "$config_file"

  procd_open_instance
  procd_set_param command /usr/bin/$APP
  procd_append_param command --config "$config_file"
  [ "$watch_config" -eq 1 ] && procd_append_param command --watch-config
  [ "$verbose" -eq 1 ] && procd_append_param command --verbose

  # vector alway logging to stderr: https://github.com/vectordotdev/vector/pull/9166
  procd_set_param respawn
  procd_set_param stdout "$std_out"
  procd_set_param stderr "$std_err"

  procd_close_instance
}

stop_service() {
  service_stop /usr/bin/$APP
}

service_triggers() {
	procd_add_reload_trigger "$APP"
}
